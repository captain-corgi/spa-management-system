name: Frontend CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - shell
          - customer-app
          - appointment-app
          - staff-app
          - branch-app
          - marketing-app
          - finance-app
          - analytics-app
    defaults:
      run:
        working-directory: ../../frontend/${{ matrix.app }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test -- --coverage
      - name: Build app
        run: npm run build
      - name: Build Docker image
        run: docker build -t ${{ matrix.app }}:ci .
      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@v0.16.0
        with:
          image-ref: ${{ matrix.app }}:ci
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - shell
          - customer-app
          - appointment-app
          - staff-app
          - branch-app
          - marketing-app
          - finance-app
          - analytics-app
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set environment variables
        id: env
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            echo "::set-output name=env::dev"
            echo "::set-output name=namespace::spa-dev"
          elif [[ "${GITHUB_REF}" == "refs/heads/sit" ]]; then
            echo "::set-output name=env::sit"
            echo "::set-output name=namespace::spa-sit"
          elif [[ "${GITHUB_REF}" == "refs/heads/uat" ]]; then
            echo "::set-output name=env::uat"
            echo "::set-output name=namespace::spa-uat"
          elif [[ "${GITHUB_REF}" == "refs/heads/nft" ]]; then
            echo "::set-output name=env::nft"
            echo "::set-output name=namespace::spa-nft"
          elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "::set-output name=env::prd"
            echo "::set-output name=namespace::spa-system"
          else
            echo "::set-output name=env::dev"
            echo "::set-output name=namespace::spa-dev"
          fi
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.app }}:${{ steps.env.outputs.env }}-${{ github.sha }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.app }}:${{ steps.env.outputs.env }}-${{ github.sha }}
      - name: Deploy to Kubernetes
        if: steps.env.outputs.env != ''
        uses: azure/k8s-deploy@v5
        with:
          manifests: |
            ../../infrastructure/k8s/frontend/${{ matrix.app }}-deployment.yaml
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.app }}:${{ steps.env.outputs.env }}-${{ github.sha }}
          namespace: ${{ steps.env.outputs.namespace }}
      - name: Notify on success
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Frontend Deploy Success: ${{ matrix.app }} - ${{ steps.env.outputs.env | upper }}"
          to: ${{ secrets.NOTIFY_EMAIL }}
          body: "${{ matrix.app }} deployed successfully to ${{ steps.env.outputs.env | upper }}."
